name: Code Coverage Summary

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['16', '18', '20']

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      # Instalar pnpm manualmente y verificar su instalación
      - name: Install pnpm
        run: |
          npm install -g pnpm
          pnpm --version

      # Verificar si el archivo pnpm-lock.yaml existe, y manejar instalación dependiendo de su presencia
      - name: Install Dependencies
        run: |
          if [ -f pnpm-lock.yaml ]; then
            echo "pnpm-lock.yaml encontrado, ejecutando instalación con frozen lockfile"
            pnpm install --prefer-frozen-lockfile || pnpm install
          else
            echo "pnpm-lock.yaml no encontrado, ejecutando instalación normal"
            pnpm install
          fi

      # Ejecutar las pruebas con Jest
      - name: Run Jest Tests with Coverage
        run: pnpm test -- --coverage

      # Generar reporte de cobertura de código
      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: "coverage/**/cobertura-coverage.xml"
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: "60 80"

      # Subir artefacto de cobertura
      - name: Upload Coverage Artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report-node-${{ matrix.node-version }}
          path: coverage/
